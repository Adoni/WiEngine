$#include "WiEngine.h"

/*
 * Copyright (c) 2010 WiYun Inc.

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
#ifndef __wyAngelCodeTXTFontLoader_h__


/**
 * @class wyAngelCodeTXTFontLoader
 *
 * 载入Cocos2D字体描述文件, 该类主要由内部使用, 开发者不需要直接访问.
 */
class wyAngelCodeTXTFontLoader {
public:
	/**
	 * 字符信息解析函数
	 *
	 * @param font \link wyBitmapFont wyBitmapFont\endlink
	 * @param data fnt文件的原始数据
	 * @param length data数据长度
	 * @param resScale 表示大小的数值需要缩放的比例, 缺省是1
	 */
	static void load(wyBitmapFont* font, const char* data, size_t length, float resScale = 1.f);
};

#endif // __wyAngelCodeTXTFontLoader_h__
/*
 * Copyright (c) 2010 WiYun Inc.

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
#ifndef __wyAngelCodeXMLFontLoader_h__


typedef unsigned char xmlChar;

/**
 * @class wyAngelCodeXMLFontLoader
 *
 * 载入Sparrow字体描述文件, 该类主要由内部使用, 开发者不需要直接访问.
 */
class wyAngelCodeXMLFontLoader {
public:
	/**
	 * 字符信息解析函数
	 *
	 * @param font \link wyBitmapFont wyBitmapFont\endlink
	 * @param data fnt文件的原始数据
	 * @param length data数据长度
	 * @param resScale 表示大小的数值需要缩放的比例, 缺省是1
	 */
	static void load(wyBitmapFont* font, const char* data, size_t length, float resScale = 1.f);
};

#endif // __wyAngelCodeXMLFontLoader_h__
/*
 * Copyright (c) 2010 WiYun Inc.

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
#ifndef __wyBitmapFont_h__


typedef enum {
	/// HGE bitmap font editor导出的格式
	BFF_HGE,

	/// AngelCode的文本格式, 可以通过Glyph Designer导出
	BFF_ANGELCODE_TXT,

	/// AngelCode的XML格式, 可以通过Glyph Designer导出
	BFF_ANGELCODE_XML
} wyBitmapFontFormat;

/**
 * @struct wyCharInfo
 *
 * 用来保存字体文字信息
 */
typedef struct wyCharInfo {
	wyCharInfo() :
			word(0),
			left(0),
			right(0),
			top(0),
			texRect(wyrZero) {
	}

	/// 字符的utf-8编码使用big endian转换为整数后的形式
	int word;

	/// 绘制当前字符时要增加的左侧间距
	int left;

	/// 绘制下一个字符时要增加的右侧间距
	int right;

	/// 绘制当前字符时需要增加的顶部间距
	int top;

	/// 字符所在的atlas页
	int page;
	
	/// 在贴图中的区域，单位为像素
	wyRect texRect;
} wyCharInfo;

/**
 * @class wyBitmapFont
 *
 * 从资源文件或系统文件加载Bitmap字体. 字体描述文件可以通过WiEngine支持的图片字体工具生成, 目前已经支持
 * 多种格式. 但是基本上都是一个描述文件和一个图片搭配的形式. 描述文件和图片需要统一放置, 可以放在res下, 也
 * 可以放在assets或者文件系统中, 一定不能把它们分开放置, 比如把描述文件放在assets下, 图片放在res下.
 */
class wyBitmapFont {
public:
	/**
	 * 载入一个图片字体的描述文件, 如还没有创建，创建一个新font，否则返回之前创建的
	 *
	 * @param resId 图片字体描述文件的资源ID
	 * @param format 字体描述文件的格式, 缺省是HGE格式, HGE格式不是最强的格式, 不过这是WiEngine第一个支持的图片字体格式.
	 * 		可以认为是出于历史原因和纪念意义吧
	 */
	static wyBitmapFont* loadFont(int resId, wyBitmapFontFormat format = BFF_HGE);

	/**
	 * 载入一个图片字体的描述文件, 如还没有创建，创建一个新font，否则返回之前创建的
	 *
	 * @param path 字体描述文件的路径名
	 * @param isFile 默认为false，true表示path为系统路径，否则为资源路径
	 * @param format 字体描述文件的格式, 缺省是HGE格式, HGE格式不是最强的格式, 不过这是WiEngine第一个支持的图片字体格式.
	 * 		可以认为是出于历史原因和纪念意义吧
	 */
	static wyBitmapFont* loadFont(const char* path, bool isFile = false, wyBitmapFontFormat format = BFF_HGE);

	/**
	 * 静态函数，卸载字体
	 */
	static void unloadFont(wyBitmapFont* font);

	/**
	 * 静态函数，卸载所有字体
	 */
	static void unloadAll();

	/**
	 * 添加一个贴图页
	 *
	 * @param tex \link wyTexture2D wyTexture2D\endlink
	 */
	void addTexture(wyTexture2D* tex);

	/**
	 * 得到某页的贴图
	 *
	 * @param index 页索引, 从0开始
	 * @return \link wyTexture2D wyTexture2D\endlink
	 */
	wyTexture2D* getTexture(int index) { return (wyTexture2D*)wyArrayGet(m_textures, index); }

	/**
	 * 获得指定字符在贴图中的位置和大小，单位为像素
	 *
	 * @param[in] wc 字符utf-8编码通过big endian转换为整数的形式
	 */
	wyCharInfo* getCharInfo(int wc);

	/**
	 * 获得资源ID
	 *
	 * @return 资源ID，如果font是从系统文件加载的，返回0
	 */
	int getResId() { return m_resId; }

	/**
	 * 获得hash值
	 *
	 * @return 当前对象在图片字体缓冲区中的索引哈希
	 */
	int getHash() { return m_hash; }

	/**
	 * 字体描述文件是否来自文件系统
	 *
	 * @return true表示字体描述文件来自文件系统
	 */
	bool isFile() { return m_isFile; }

	/**
	 * 得到字体描述文件的路径
	 *
	 * @return 字体描述文件的路径
	 */
	const char* getPath() { return m_path; }

	/**
	 * 添加一个字符信息
	 *
	 * @param ci \link wyCharInfo wyCharInfo\endlink
	 */
	void addCharInfo(wyCharInfo* ci);

	/**
	 * 获得行的高度, 大于0的值表示是统一行高, 即每行都具有这个高度. 小于等于0表示使用
	 * 动态行高, 每行的高度都可能不一样, 是根据字符高度计算出来的.
	 *
	 * @return 行高
	 */
	float getLineHeight() { return m_lineHeight; }

	/**
	 * 设置行高. 大于0的值表示是统一行高, 即每行都具有这个高度. 小于等于0表示使用动态行高,
	 * 每行的高度都可能不一样, 是根据字符高度计算出来的.
	 *
	 * @param height 行高.
	 */
	void setLineHeight(float height) { m_lineHeight = height; }
};

#endif
/*
 * Copyright (c) 2010 WiYun Inc.

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
#ifndef __wyBitmapFontLabel_h__


/**
 * @class wyBitmapFontLabel
 *
 * 使用wyBitmapFont中的文字创建文本标签。
 * 文本内容默认为单行显示。如设置了行宽，则会根据行宽自动换行,
 * 从上到下逐行显示。
 */
class wyBitmapFontLabel : public wyNode {
public:
	/**
	 * 静态函数 创建一个wyBitmapFontLable节点
	 *
	 * @param[in] font 字体
	 * @param[in] text 要显示的字符串，编码为utf-8
	 */
	static wyBitmapFontLabel* make(wyBitmapFont* font, const char* text);

	/**
	 * 构造函数
	 *
	 * @param[in] font 字体
	 * @param[in] text 要显示的字符串，编码为utf-8
	 */
	wyBitmapFontLabel(wyBitmapFont* font, const char* text);

	/**
	 * 析构函数
	 */
	virtual ~wyBitmapFontLabel();

	/// @see wyNode::setText
	virtual void setText(const char* text);

	/// @see wyNode::getText
	virtual const char* getText() { return m_text; }

	/**
	 * 设置字体
	 */
	void setFont(wyBitmapFont* font) { m_font = font; }

	/**
	 * 获得字体
	 */
	wyBitmapFont* getFont() { return m_font; };

	/**
	 * 设置一个空格的像素宽度
	 *
	 * @param w 空格的像素宽度
	 */
	void setSpaceWidth(float w) { m_spaceWidth = w; }

	/**
	 * 得到空格的像素宽度
	 *
	 * @return 空格的像素宽度
	 */
	float getSpaceWidth() { return m_spaceWidth; }

	/**
	 * 设置一个制表符代表的空格数目
	 *
	 * @param tabSize 一个制表符代表的空格数目
	 */
	void setTabSize(int tabSize) { m_tabSize = tabSize; }

	/**
	 * 得到一个制表符代表的空格数目
	 *
	 * @return 一个制表符代表的空格数目
	 */
	int getTabSize() { return m_tabSize; }

	/**
	 * 设置行的宽度. 设置后节点的大小将被重新计算，因此节点大小可能会被改变。
	 * 一个小于等于0的值表示行宽是无穷大.
	 *
	 * @param width 行宽, 如该值大于实际所有文字一行所占宽度，则行宽为实际宽度
	 */
	void setLineWidth(float width);

	/**
	 * 获得行的宽度, 一个小于等于0的值表示行宽是无穷大.
	 *
	 * @return 行宽
	 */
	float getLineWidth() { return m_lineWidth; }

	/**
	 * 获得行的高度, 大于0的值表示是统一行高, 即每行都具有这个高度. 小于等于0表示使用
	 * 动态行高, 每行的高度都可能不一样, 是根据字符高度计算出来的.
	 *
	 * @return 行高
	 */
	float getLineHeight() { return m_lineHeight; }

	/**
	 * 设置行高. 设置后节点的大小将被重新计算，因此节点大小可能会被改变。大于0的值表示是统一行高,
	 * 即每行都具有这个高度. 小于等于0表示使用动态行高, 每行的高度都可能不一样, 是根据字符高度计算出来的.
	 *
	 * @param height 行高.
	 */
	void setLineHeight(float height);
};

#endif
/*
 * Copyright (c) 2010 WiYun Inc.

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
#ifndef __wyHGEFontLoader_h__


/**
 * @class wyHGEFontLoader
 *
 * 载入HGE字体描述文件, 该类主要由内部使用, 开发者不需要直接访问.
 */
class wyHGEFontLoader {
public:
	/**
	 * 字符信息解析函数
	 *
	 * @param font \link wyBitmapFont wyBitmapFont\endlink
	 * @param data fnt文件的原始数据
	 * @param length data数据长度
	 * @param resScale 表示大小的数值需要缩放的比例, 缺省是1
	 */
	static void load(wyBitmapFont* font, const char* data, size_t length, float resScale = 1.f);
};

#endif // __wyHGEFontLoader_h__
